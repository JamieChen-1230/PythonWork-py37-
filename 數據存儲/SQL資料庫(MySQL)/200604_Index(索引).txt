SQL索引：
    - 索引是數據庫的搜索引擎使用，能減少磁碟I/O及邏輯讀取的消耗，並以此來提升 SELECT 語句的查詢效能。
    - 索引原理：
        HASH：
            一、Hash索引僅僅能滿足等於(=)、在其中(IN)和不等於(<=>)之查詢，不能使用範圍查詢。
                - 因為Hash索引是利用Hash值來比較，所以它只能用於等值的過濾，不能用於範圍的過濾。
                - 且因為經過相應的Hash演算法得出的Hash值的大小關係，跟Hash前原值的大小關係並不一定相同。
            二、Hash索引不能利用部分索引鍵查詢。
                - 對於組合索引，Hash索引在計算Hash值的時是組合索引鍵合併後再一起計算的，而不是單獨計算Hash值，
                  所以通過組合索引的前面一個或幾個索引鍵進行查詢的時候，Hash索引無法被利用。
        BTREE(二元樹)：
            一、是一種將索引值按一定的演算法，存入一個樹形的資料結構中，每次查詢都是從樹的根節點(root)開始，依次遍歷節點(node)，獲取葉節點(leaf)。
        選擇：
            當需要做到排序和區間查詢的，只能用B-tree，而對於欄位相對來說唯一值較高，且都為單欄位查詢的，更適合選取hash。
                - 因為當Hash索引遇到大量Hash值相等的情況後效能並不一定就會比B-Tree索引高，所以hash比較適合unique的字段。
    - 索引結構：
        - 聚(叢)集索引：
            - 聚(叢)集索引將資料表或檢視中的資料列依其索引鍵值排序與儲存。
            - 聚(叢)集索引決定了資料的物理儲存形態，所以一張表上只能有一個聚集索引。
            - 如果資料表沒有任何叢集索引，它的資料列就儲存在未排序的結構中，這個結構稱為堆積。
            - 通常會建立在PRIMARY KEY上。
        - 非聚(叢)集索引：
            - 非叢集索引有一個與資料列完全分開的結構。
            - 非叢集索引包含非叢集索引鍵值，而每個索引鍵值項目都有一個指標，指向包含索引鍵值的資料列。
    - 索引分類：
        - 過濾索引：
            - 類似於一個帶著 WHERE 子句的非聚集索引。
            - 常規的索引都是對整張表的每條資料進行索引，而過濾索引僅僅對滿足特定條件的記錄進行索引。
            - 適當地使用能減少索引的儲存尺寸及維護消耗，同時提高查詢效能。
        - 普通索引：
            - 下面的index_name為索引名，不寫的話默認為原名
            create table key_test(
                id int,
                name varchar(20),
                key index_name (name)
            );
        - 主鍵索引：
            - 當建立primary key時就會自動創建主鍵索引。
            create table test1(
                id int primary key auto_increment,
                name varchar(20),
                salary int default 1000
            );
        - 唯一索引：
            - 當建立建立了唯一約束，系統將自動建立唯一索引。
            create table unique_test(
                id int,
                name varchar(20) unique,
            );
        - 全文索引：
            - 全文檢索搜尋可讓使用者針對資料表中以字元為主的資料，執行全文檢索查詢。
            create table fulltext_test(
                id int,
                name varchar(20),
                resume varchar(50),
                fulltext key (resume)
            );
    - 索引的新增或刪除：
        新增索引：
            指令範例： alter table tab_name add [unique|fulltext等] index 索引名 (字段名);
            ※ 此時字段名就等於索引名
            指令範例二： alter table tab_name add [unique|fulltext等] key (字段名);
        刪除索引：
            指令範例： drop index 索引名 on 表名
