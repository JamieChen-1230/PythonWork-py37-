取自於: https://www.cnblogs.com/alex3714/articles/5930846.html

版本庫(repository):
    可理解為一個目錄，裡面的文件記錄著各種信息，而每個文件的修改Git都會進行追蹤並記錄，以便之後的追踪或還原
    版本庫創建:
        git init => 創建了一個隱藏的.git目錄當作版本庫

登入Git:
    git config --global user.email xxxxx@xxx
    git config --global user.name ooo

把文件添加到版本庫:
    git add xxx.py => 告訴Git我想要把此文件添加到版本庫(Git會將此文件信息先放到Git暫存區)
        git add . => 告訴Git我想要把此「目錄的所有文件」添加到版本庫
    git commit -m "xxxxxxx" => 告訴Git把此文件提交到本地的版本庫(Git會將文件從Git暫存區放到本地的倉庫)

把文件從版本庫刪除:
    rm xxx.py => 刪除本地文件(系統刪除指令)
    git add xxx.py => 告訴Git我想要修改此文件(Git會先放到Git暫存區)
    git commit -m "xxxxxxx" => 告訴Git把版本庫的此文件進行修改(Git會從暫存區放到倉庫)

查看目前狀態:
    git status => 查看所有文件狀態

撤回未提交至暫存區的文件(未add/rm前):
    git checkout xxx.py => 將「未提交至暫存區的文件」還原到最後一次提交到倉庫的版本

查看提交日誌:
    git log => 顯示每一次commit的信息(id, name, date)，便於我們找出要回滾的版本
    git log --pretty=oneline => 顯示每一次commit的信息(只有id)
    git reflog => 若後悔回滾的話的補救方法，可以查看所有的提交與回滾紀錄

回滾(撤回)已提交至倉庫的文件:
    git reset --hard HEAD^ => 回滾到上一個版本
    git reset --hard fc25e782315b0a3f1674c78dabc081f2e29052cc => 回滾到此id(輸入前7碼即可)的版本，只要有id就能回滾
        git reset --hard fc25e78 => 回滾到此id(輸入前7碼即可辨認)的版本


########################遠程倉庫(ex: github)########################
下載代碼:
    http: 不須認證，下載公共代碼不須輸入用戶名密碼
        git clone https://github.com/silencejamie/git_test.git
    ssh: 須認證，必須輸入用戶名密碼

把文件添加到遠程倉庫:
    git add xxx.py => 告訴Git我想要把此文件添加到版本庫(Git會將此文件信息先放到Git暫存區)
    git commit -m "xxxxxxx" => 告訴Git把此文件提交到本地的版本庫(Git會將文件從Git暫存區放到本地的倉庫)
    git remote add origin https://github.com/silencejamie/git_test.git => 添加遠程URL
    git push -u origin master:master => 告訴Git把本地的master分支(左)的此文件提交到遠程倉庫(origin為預設URL)的遠程的master分支(右)，-u表要登入

分支:
    git checkout -b xxx => 創建並切換分支，在哪個分支上創建分支，就會以該分支為基礎創建
    git checkout xxx => 切換分支
    git branch => 查看分支，*代表當前分支

暫存當前分支的代碼:
    git stash => 暫存，這樣不必提交到本地倉庫就可以切換分支了
    git stash list => 查看暫存區列表
    git stash apply => 恢復之前保存的工作
    git stash drop => 刪除暫存的備份檔
    git stash pop => 等於git stash apply + git stash drop

更新本地端代碼:
    git pull => 從遠程倉庫拿最新代碼更新本地代碼

合併代碼(本地):
    切換到本地master >> 更新本地端代碼(git pull) >> git merge xxx分支

上傳忽略文件(讓一些文件不上傳到遠程倉庫):
    建立 .gitignore文件 >> 添加不想上傳到遠程的檔名
