"""
1. 字典的value可以是任何類型
2. 布林值、列表、字典不能做為key，因為key只能為不可變類型
3. 無序
"""

# -------字典dict-------

# 基本練習，找到11
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}  # 元素為鍵值對
# print(di["k3"][3]["kk1"][0])  # => 11

# 刪除鍵值對
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}  # 元素為鍵值對
# del di["k1"]
# print(di)  # => {'k2': True, 'k4': (13, 22), 'k3': [13, 22, 33, {'kk1': (11, 22)}]}

# for迴圈打印字典(表字典是可迭代對象)
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}
# for i in di:
#     print(i)  # => k4,k1,k3,k2 默認打印key
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}
# for i in di.values():
#     print(i)  # value
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}
# for k,v in di.items():
#     print(k, v)  # => key + value

# 根據序列創建字典，並指定統一的值(此為靜態方法，調用方法為 類.方法())
# print(dict.fromkeys([1, 2, 3], 123))  # => {1: 123, 2: 123, 3: 123}

# 根據key獲取值(比di["k1"]方法好，因為沒找到key不會error)
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}
# v = di.get("k1", "不存在")  # 參數一為要找的key值、參數二為當找不到key時回傳的文字
# print(v)  # => 18
# v = di.get("k1111", "不存在")  # 參數一為要找的key值、參數二為當找不到key時回傳的文字
# print(v)  # => 不存在
# v = di.get("k1111")  # 參數一為要找的key值、參數二為當找不到key時回傳的文字
# print(v)  # => None

# 刪除鍵值對，並回傳被刪除的value
# di = {"k1": 18, "k2": True, "k3": [13, 22, 33, {"kk1": (11, 22)}], "k4": (13, 22)}
# v = di.pop("k1", 90)  # 參數二為默認值，若找不到key刪除，則pop()回傳默認值
# print(di)  # => {'k4': (13, 22), 'k3': [13, 22, 33, {'kk1': (11, 22)}], 'k2': True}
# print(v)  # => 18
# v2 = di.pop("k111", "不存在")
# print(v2)  # => 不存在

# 新增鍵值對，若key不存在則直接新增且回傳value，若key已存在則不新增且回傳原本的value
# di = {"k1": 18, "k2": True}
# v = di.setdefault("k3", 4)
# print(di, v)   # => {'k2': True, 'k3': 4, 'k1': 18} 4
# v = di.setdefault("k2", 4)
# print(di, v)  # => {'k1': 18, 'k2': True} True

# 更新鍵值對(存在則更新，不存在則新增)
# di = {"k1": 18, "k2": True}
# di.update({"k1": 11111, "k3": 123})
# print(di)  # => {'k2': True, 'k1': 11111, 'k3': 123}

# 字典清空
# di = {"k1": 18, "k2": True}
# di.clear()
# print(di)  # => {}

# 字典複製
# di = {"k1": 18, "k2": True}
# di2 = di.copy()
# print(di2)  # => {'k1': 18, 'k2': True}
